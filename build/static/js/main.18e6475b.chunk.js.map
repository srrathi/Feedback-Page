{"version":3,"sources":["components/Form.js","components/Option.js","components/OptionList.js","components/Admin.js","components/Nav.js","components/Client.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","options","setInputText","setOptions","useState","optn","setOptn","className","value","onChange","e","target","type","placeholder","onClick","preventDefault","console","log","text","edit","selected","count","id","length","Option","props","editText","setEditText","e1","option","map","item","filter","OptionList","index","Admin","admin","showAdminPanel","Nav","Client","App","showAdmin","showFeed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18e6475b.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nconst Form = ({inputText, options, setInputText, setOptions}) =>{\n    //Functions\n    \n    const inputTextHandler = (e) => {\n        setInputText(e.target.value)\n    }\n\n    const[optn,setOptn] = useState(options)\n    const submitOptionHandler = (e) => {\n        e.preventDefault();\n        console.log(options)\n\n        setOptions([\n            ...options,\n            {text: inputText,\n                edit:false, \n                selected: false, \n                count: 0, \n                id: optn.length}\n        ])\n        \n        setInputText(\"\");\n        setOptn(options)\n    }\n\n    return(\n        <form className = \"main-form\">\n            <input className = \"form-input\" value = {inputText} onChange = {inputTextHandler} type = \"text\" placeholder = \"Add new option\"></input>\n            <button className = \"add-btn\" onClick = {submitOptionHandler} type = \"submit\">Add new</button>\n        </form>\n    )\n}\n\nexport default Form","import React,{useState} from 'react'\n\nconst Option = (props) => {\n\n    const [editText, setEditText] = useState(\"\");\n\n    const deleteHandler = ()=> {\n        props.setOptions(props.options.filter(e1 => e1.id !== props.option.id))\n        // console.log(props.option)\n    }\n\n    const editTextHandler = (e1) => {\n        setEditText(e1.target.value)\n        // console.log(e1.target.value)\n    }\n    // console.log(props.inputText)\n\n    const editHandler = () => {\n        props.setOptions(props.options.map((item) => {\n\n            if(item.id === props.option.id && item.edit === false){\n                return{\n                    ...item, edit:true\n                }\n            }\n\n            else if(item.id === props.option.id && item.edit === true){\n                return{\n                    ...item,text: editText, edit:false\n                }\n            }\n            return item\n        })\n        );\n    }\n    // console.log(props.options)\n    return (\n        <div className=\"list\">\n\n            <li className=\"options-list\" id={props.id}>{props.text}</li>\n            <span>counts = {props.count}</span>\n            <input onChange={editTextHandler} \n            className={`${props.option.edit ? \"edit-input-visible\" : \"edit-input-invisible\"}`}>\n            </input>\n\n            <button onClick={editHandler}>Edit</button>\n            <button onClick={deleteHandler}>Delete</button>\n        </div>\n    )\n}\n\nexport default Option","import React from 'react'\nimport Option from './Option'\n\nconst OptionList =({options, \n    setOptions,  \n    setInputText}) => {\n    return (\n        <div>\n            <ul>\n                {   options.map((option , index) => {\n                        return (<Option\n                        option = {option}\n                        count = {option.count}\n                        id = {index}\n                        setOptions = {setOptions}\n                        options = {options}\n                        text = {option.text}\n                        key = {option.id}\n                        setInputText = {setInputText}\n                        ></Option>)\n                    })\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default OptionList","import React,{useState} from 'react'\nimport Form from './Form';\nimport OptionList from './OptionList'\n\nfunction Admin({\n    admin,\n    inputText,\n    setInputText,\n    options,\n    setOptions,\n    showAdminPanel}) {\n    \n    return (\n        <div>\n            <button key = \"2\" className = {`admin-btn ${admin ? \"edit-input-invisible\" : \"edit-input-visible\"}`} onClick = {showAdminPanel}>Admin sign in</button>\n            <div className = {`admin-div ${admin ? \"edit-input-visible\" : \"edit-input-invisible\"}`} onClick = {showAdminPanel}>\n            \n            \n                <Form\n                inputText = {inputText}\n                options = {options}\n                setOptions = {setOptions}\n                setInputText = {setInputText}\n                ></Form>\n\n                <h3>Reasons Available</h3>\n                <OptionList\n                setInputText = {setInputText}\n                setOptions = {setOptions}\n                options = {options}\n                ></OptionList>\n            </div>\n        </div>\n    )\n}\n\nexport default Admin\n","import React from 'react'\nfunction Nav() {\n    return (\n        <div>\n        <nav className = \"head\">\n            <div>\n                <h1>Extension Uninstall Feedback</h1>\n            </div>\n        </nav>\n        \n        </div>\n    )\n}\n\nexport default Nav\n","import React, {useState} from 'react'\n\nconst Client = (props) => {\n    const counterIncrement = ()=> {\n        console.log(props.options)\n        props.setOptions(props.options.map((item) => {\n            if(item.id === props.option.id && item.selected === false){\n                return{\n                    ...item,selected:true, count:item.count+1    \n                }\n            }\n            else{\n                return{\n                    ...item,selected:true\n                }\n            }\n        })\n        )\n    }\n    \n    return (\n        \n        <div>\n            \n            <ul className = {`${props.option.selected ? \"edit-input-invisible\" : \"edit-input-visible\"}`}>\n                <div className = \"feedback-list\">\n                <div><button onClick = {counterIncrement}>select</button></div>\n                <div><li key = {props.id}>{props.text}</li></div>\n                </div>\n            </ul>\n        </div>\n    )\n}\n\nexport default Client","import React, {useState} from 'react'\nimport './App.css';\nimport Admin from './components/Admin';\nimport Nav from './components/Nav';\nimport Client from './components/Client'\n\nfunction App() {\n\n  const [inputText, setInputText] = useState(\"\");\n  const [admin,showAdmin] = useState(false)\n  const [feed,showFeed] = useState(false)\n\n  const [options, setOptions] = useState([\n    {\n      \"text\": \"Product is Expensive\",\n      \"count\": 12,\n      \"selected\": false,\n      \"edit\":false,\n      \"id\": 0\n    },\n    {\n      \"text\": \"Product is Complicated\",\n      \"count\": 13,\n      \"selected\": false,\n      \"edit\":false,\n      \"id\": 1\n    },\n    {\n      \"text\": \"I was just browsing the Product\",\n      \"count\": 14,\n      \"selected\": false,\n      \"edit\":false,\n      \"id\": 2\n    },\n    {\n      \"text\": \"Not interested\",\n      \"count\": 15,\n      \"selected\": false,\n      \"edit\":false,\n      \"id\": 3\n    }\n  ]);\n\n  const showAdminPanel = ()=> {\n    if(!admin){\n      showAdmin(true)\n      showFeed(true)\n    }\n    \n  }\n\n  return (\n    <div className = \"App\">\n      <Nav></Nav>\n          <Admin\n            admin = {admin}\n            showAdmin = {showAdmin}\n            inputText = {inputText}\n            setInputText = {setInputText}\n            options = {options}\n            setOptions = {setOptions}\n            showAdminPanel = {showAdminPanel}\n            />\n\n          <div>\n          <button key = \"1\" className = {`feedback-btn ${admin ? \"edit-input-visible\" : \"edit-input-invisible\"}`} onClick = {showAdminPanel}>Feedback Page</button>\n            <div className = {`feedback ${admin ? \"edit-input-invisible\" : \"edit-input-visible\"}`} onClick = {showAdminPanel}>\n            <h3>Feedback Page</h3>\n          <h5>Please select any one option from below to give your feedback</h5>\n          {options.map((option,index) => {\n\n              return (<div><Client\n              option = {option}\n              count = {option.count}\n              id = {index}\n              setOptions = {setOptions}\n              options = {options}\n              text = {option.text}\n              key = {option.id}\n              setInputText = {setInputText}\n              /></div>)\n            })}</div>\n\n            </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}